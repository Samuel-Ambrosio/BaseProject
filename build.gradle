import com.samuelav.buildsrc.dependencies.Classpaths
import com.samuelav.buildsrc.dependencies.Plugins

apply plugin: Plugins.gradleVersionsPlugin
apply plugin: Plugins.gradleDependencyGraphGenerator

buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath Classpaths.gradlePlugin
        classpath Classpaths.gradleKotlinPlugin
        classpath Classpaths.gradleVersionsPlugin
        classpath Classpaths.gradleDependencyGraphGenerator
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        (it.candidate.group == 'org.jacoco') || isNonStable(it.candidate.version)
    }
}

dependencyGraphGenerator {
    generators {
        modules {
            include = { dependency -> dependency.getModuleGroup().startsWith("BaseProject") }
            children = { dependency -> true }
        }
    }
}